language: python

python:
    - 2.6
    - 2.7
    - 3.3
    - 3.4
    # This is just for "egg_info".  All other builds are explicitly given in the matrix
env:
    global:
        # Set defaults to avoid repeating in most cases
        - NUMPY_VERSION=1.9
        - MAIN_CMD='python setup.py'
        - CONDA_DEPENDENCIES='Cython jinja2'
        - CONDA_ALL_DEPENDENCIES='Cython jinja2 scipy h5py matplotlib pyyaml scikit-image pandas pytz beautiful-soup'
        - PIP_DEPENDENCIES=''

    matrix:
        - SETUP_CMD='egg_info'

matrix:
    include:

        # Try MacOS X
        - os: osx
          env: PYTHON_VERSION=2.7 SETUP_CMD='test'
               CONDA_DEPENDENCIES=$CONDA_ALL_DEPENDENCIES

        # Check for sphinx doc build warnings - we do this first because it
        # runs for a long time. WCSAxes is a dependency for the docs.
        - os: linux
          env: PYTHON_VERSION=2.7 SETUP_CMD='build_sphinx -w'
               CONDA_DEPENDENCIES=$CONDA_ALL_DEPENDENCIES
               PIP_DEPENDENCIES='wcsaxes --no-deps'

        # Try all python versions with the latest numpy, but without the
        # optional dependencies
        - os: linux
          env: PYTHON_VERSION=2.6 SETUP_CMD='test --open-files'
        - os: linux
          env: PYTHON_VERSION=2.7 SETUP_CMD='test --open-files'
        - os: linux
          env: PYTHON_VERSION=3.3 SETUP_CMD='test --open-files'
        - os: linux
          env: PYTHON_VERSION=3.4 SETUP_CMD='test --open-files'
        - os: linux
          env: PYTHON_VERSION=3.5 SETUP_CMD='test --open-files'

        # Now try with all optional dependencies on 2.7 and an appropriate 3.x
        # build (with latest numpy). We also note the code coverage on Python
        # 2.7.
        - os: linux
          env: PYTHON_VERSION=2.7 SETUP_CMD='test --coverage'
               CONDA_DEPENDENCIES=$CONDA_ALL_DEPENDENCIES
               PIP_DEPENDENCIES='cpp-coveralls'
               LC_CTYPE=C.ascii LC_ALL=C.ascii
               CFLAGS='-ftest-coverage -fprofile-arcs -fno-inline-functions -O0'
        - os: linux
          env: PYTHON_VERSION=3.4 SETUP_CMD='test'
               CONDA_DEPENDENCIES=$CONDA_ALL_DEPENDENCIES
               LC_CTYPE=C.ascii LC_ALL=C.ascii

        # Try older numpy versions without optional dependencies
        - os: linux
          env: PYTHON_VERSION=2.7 NUMPY_VERSION=1.8 SETUP_CMD='test'
        - os: linux
          env: PYTHON_VERSION=2.7 NUMPY_VERSION=1.7 SETUP_CMD='test'
        - os: linux
          env: PYTHON_VERSION=2.7 NUMPY_VERSION=1.6 SETUP_CMD='test'

        # Try developer version of Numpy without optional dependencies
        - os: linux
          env: PYTHON_VERSION=2.7 NUMPY_VERSION=dev SETUP_CMD='test'

        # Do a PEP8 test
        - python: 2.7
          env: MAIN_CMD='pep8 astropy --count' SETUP_CMD=''

before_install:

    # Use utf8 encoding. Should be default, but this is insurance against
    # future changes
    - export PYTHONIOENCODING=UTF8
    - wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh
    - chmod +x miniconda.sh
    - ./miniconda.sh -b
    - export PATH=/home/travis/miniconda/bin:$PATH
    - conda update --yes conda

    # UPDATE APT-GET LISTINGS
    - sudo apt-get update

    # DOCUMENTATION DEPENDENCIES
    - if [[ $SETUP_CMD == build_sphinx* ]]; then sudo apt-get install graphviz texlive-latex-extra dvipng; fi

install:
    - git clone git://github.com/astropy/ci-helpers.git
    - source ci-helpers/travis/setup_conda_$TRAVIS_OS_NAME.sh

script:
    - $MAIN_CMD $SETUP_CMD

after_success:
    - if [[ $SETUP_CMD == 'test --coverage' ]]; then coveralls --rcfile='astropy/tests/coveragerc'; fi
