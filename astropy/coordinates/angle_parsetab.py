# -*- coding: utf-8 -*-
# Licensed under a 3-clause BSD style license - see LICENSE.rst

# This file was automatically generated from ply. To re-generate this file,
# remove it from this folder, then build astropy and run the tests in-place:
#
#   python setup.py build_ext --inplace
#   pytest astropy/coordinates
#
# You can then commit the changes to this file.


# angle_parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'SIGN UINT UFLOAT COLON DEGREE HOUR MINUTE SECOND SIMPLE_UNIT DIRECTION\n            angle : hms\n                  | dms\n                  | arcsecond\n                  | arcminute\n                  | simple\n            \n            sign : SIGN\n                 |\n            \n            dir : DIRECTION\n                |\n            \n            ufloat : UFLOAT\n                   | UINT\n            \n            colon : sign UINT COLON ufloat\n                  | sign UINT COLON UINT COLON ufloat\n            \n            spaced : sign UINT ufloat\n                   | sign UINT UINT ufloat\n                   | sign UINT ufloat dir\n                   | sign UINT UINT ufloat dir\n            \n            generic : colon\n                    | spaced\n                    | sign UFLOAT\n                    | sign UINT\n                    | sign UFLOAT dir\n                    | sign UINT dir\n            \n            hms : sign UINT HOUR dir\n                | sign UINT HOUR ufloat dir\n                | sign UINT HOUR UINT MINUTE dir\n                | sign UINT HOUR UFLOAT MINUTE dir\n                | sign UINT HOUR UINT MINUTE ufloat dir\n                | sign UINT HOUR UINT MINUTE ufloat SECOND dir\n                | generic HOUR dir\n            \n            dms : sign UINT DEGREE dir\n                | sign UINT DEGREE ufloat dir\n                | sign UINT DEGREE UINT MINUTE dir\n                | sign UINT DEGREE UFLOAT MINUTE dir\n                | sign UINT DEGREE UINT MINUTE ufloat dir\n                | sign UINT DEGREE UINT MINUTE ufloat SECOND dir\n                | generic DEGREE dir\n            \n            simple : generic\n                   | generic SIMPLE_UNIT\n            \n            arcsecond : generic SECOND\n            \n            arcminute : generic MINUTE\n            '
    
_lr_action_items = {'SIGN':([0,],[9,]),'UINT':([0,7,9,12,19,20,24,25,44,47,50,],[-7,12,-6,19,30,32,37,41,30,30,30,]),'UFLOAT':([0,7,9,12,19,20,24,25,44,47,50,],[-7,13,-6,23,23,35,40,23,23,23,23,]),'$end':([1,2,3,4,5,6,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,],[0,-1,-2,-3,-4,-5,-38,-18,-19,-9,-9,-9,-9,-40,-41,-39,-11,-9,-23,-9,-10,-9,-8,-22,-30,-37,-11,-9,-11,-24,-9,-10,-16,-11,-31,-9,-10,-11,-12,-17,-9,-25,-9,-9,-32,-9,-26,-9,-27,-33,-9,-34,-13,-28,-9,-35,-9,-29,-36,]),'HOUR':([8,10,11,12,13,19,21,22,23,26,27,30,31,36,41,42,43,57,],[14,-18,-19,20,-9,-11,-23,-9,-10,-8,-22,-11,-9,-16,-11,-12,-17,-13,]),'DEGREE':([8,10,11,12,13,19,21,22,23,26,27,30,31,36,41,42,43,57,],[15,-18,-19,24,-9,-11,-23,-9,-10,-8,-22,-11,-9,-16,-11,-12,-17,-13,]),'SECOND':([8,10,11,12,13,19,21,22,23,26,27,30,31,36,41,42,43,52,55,57,],[16,-18,-19,-9,-9,-11,-23,-9,-10,-8,-22,-11,-9,-16,-11,-12,-17,59,61,-13,]),'MINUTE':([8,10,11,12,13,19,21,22,23,26,27,30,31,32,35,36,37,40,41,42,43,57,],[17,-18,-19,-9,-9,-11,-23,-9,-10,-8,-22,-11,-9,44,46,-16,47,49,-11,-12,-17,-13,]),'SIMPLE_UNIT':([8,10,11,12,13,19,21,22,23,26,27,30,31,36,41,42,43,57,],[18,-18,-19,-9,-9,-11,-23,-9,-10,-8,-22,-11,-9,-16,-11,-12,-17,-13,]),'COLON':([12,41,],[25,50,]),'DIRECTION':([12,13,14,15,19,20,22,23,24,30,31,32,34,35,37,39,40,44,46,47,49,52,55,59,61,],[26,26,26,26,-11,26,26,-10,26,-11,26,-11,26,-10,-11,26,-10,26,26,26,26,26,26,26,26,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'angle':([0,],[1,]),'hms':([0,],[2,]),'dms':([0,],[3,]),'arcsecond':([0,],[4,]),'arcminute':([0,],[5,]),'simple':([0,],[6,]),'sign':([0,],[7,]),'generic':([0,],[8,]),'colon':([0,],[10,]),'spaced':([0,],[11,]),'dir':([12,13,14,15,20,22,24,31,34,39,44,46,47,49,52,55,59,61,],[21,27,28,29,33,36,38,43,45,48,51,53,54,56,58,60,62,63,]),'ufloat':([12,19,20,24,25,44,47,50,],[22,31,34,39,42,52,55,57,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> angle","S'",1,None,None,None),
  ('angle -> hms','angle',1,'p_angle','angle_utilities.py',167),
  ('angle -> dms','angle',1,'p_angle','angle_utilities.py',168),
  ('angle -> arcsecond','angle',1,'p_angle','angle_utilities.py',169),
  ('angle -> arcminute','angle',1,'p_angle','angle_utilities.py',170),
  ('angle -> simple','angle',1,'p_angle','angle_utilities.py',171),
  ('sign -> SIGN','sign',1,'p_sign','angle_utilities.py',177),
  ('sign -> <empty>','sign',0,'p_sign','angle_utilities.py',178),
  ('dir -> DIRECTION','dir',1,'p_dir','angle_utilities.py',187),
  ('dir -> <empty>','dir',0,'p_dir','angle_utilities.py',188),
  ('ufloat -> UFLOAT','ufloat',1,'p_ufloat','angle_utilities.py',198),
  ('ufloat -> UINT','ufloat',1,'p_ufloat','angle_utilities.py',199),
  ('colon -> sign UINT COLON ufloat','colon',4,'p_colon','angle_utilities.py',205),
  ('colon -> sign UINT COLON UINT COLON ufloat','colon',6,'p_colon','angle_utilities.py',206),
  ('spaced -> sign UINT ufloat','spaced',3,'p_spaced','angle_utilities.py',215),
  ('spaced -> sign UINT UINT ufloat','spaced',4,'p_spaced','angle_utilities.py',216),
  ('spaced -> sign UINT ufloat dir','spaced',4,'p_spaced','angle_utilities.py',217),
  ('spaced -> sign UINT UINT ufloat dir','spaced',5,'p_spaced','angle_utilities.py',218),
  ('generic -> colon','generic',1,'p_generic','angle_utilities.py',233),
  ('generic -> spaced','generic',1,'p_generic','angle_utilities.py',234),
  ('generic -> sign UFLOAT','generic',2,'p_generic','angle_utilities.py',235),
  ('generic -> sign UINT','generic',2,'p_generic','angle_utilities.py',236),
  ('generic -> sign UFLOAT dir','generic',3,'p_generic','angle_utilities.py',237),
  ('generic -> sign UINT dir','generic',3,'p_generic','angle_utilities.py',238),
  ('hms -> sign UINT HOUR dir','hms',4,'p_hms','angle_utilities.py',251),
  ('hms -> sign UINT HOUR ufloat dir','hms',5,'p_hms','angle_utilities.py',252),
  ('hms -> sign UINT HOUR UINT MINUTE dir','hms',6,'p_hms','angle_utilities.py',253),
  ('hms -> sign UINT HOUR UFLOAT MINUTE dir','hms',6,'p_hms','angle_utilities.py',254),
  ('hms -> sign UINT HOUR UINT MINUTE ufloat dir','hms',7,'p_hms','angle_utilities.py',255),
  ('hms -> sign UINT HOUR UINT MINUTE ufloat SECOND dir','hms',8,'p_hms','angle_utilities.py',256),
  ('hms -> generic HOUR dir','hms',3,'p_hms','angle_utilities.py',257),
  ('dms -> sign UINT DEGREE dir','dms',4,'p_dms','angle_utilities.py',271),
  ('dms -> sign UINT DEGREE ufloat dir','dms',5,'p_dms','angle_utilities.py',272),
  ('dms -> sign UINT DEGREE UINT MINUTE dir','dms',6,'p_dms','angle_utilities.py',273),
  ('dms -> sign UINT DEGREE UFLOAT MINUTE dir','dms',6,'p_dms','angle_utilities.py',274),
  ('dms -> sign UINT DEGREE UINT MINUTE ufloat dir','dms',7,'p_dms','angle_utilities.py',275),
  ('dms -> sign UINT DEGREE UINT MINUTE ufloat SECOND dir','dms',8,'p_dms','angle_utilities.py',276),
  ('dms -> generic DEGREE dir','dms',3,'p_dms','angle_utilities.py',277),
  ('simple -> generic','simple',1,'p_simple','angle_utilities.py',291),
  ('simple -> generic SIMPLE_UNIT','simple',2,'p_simple','angle_utilities.py',292),
  ('arcsecond -> generic SECOND','arcsecond',2,'p_arcsecond','angle_utilities.py',301),
  ('arcminute -> generic MINUTE','arcminute',2,'p_arcminute','angle_utilities.py',307),
]
